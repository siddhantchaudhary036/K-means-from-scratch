{"cells":[{"cell_type":"code","source":["def calc_dist(centroid_x,centroid_y,x,y):\n","  d = math.sqrt((centroid_x - x)**2 + (centroid_y - y)**2)\n","  return d\n","\n","def draw_connections(centroid_x1,centroid_y1,centroid_x2,centroid_y2,x,y):\n","  plt.figure(figsize=(12, 8))\n","  plt.scatter(x, y, color='black')\n","  plt.scatter([centroid_x1, centroid_x2], [centroid_y1, centroid_y2], color='red', label='Centroids')\n","  plt.title('Scatter Plot with Lines to Centroids')\n","  plt.xlabel('X axis')\n","  plt.ylabel('Y axis')\n","  plt.legend()\n","  plt.grid(True)\n","  i = -1\n","  for ix,iy in zip(x,y):\n","    i+=1\n","    if df['My Centroid'].iloc[i] == 1:\n","      plt.plot([centroid_x1,ix],[centroid_y1,iy],color='blue')\n","    else:\n","      plt.plot([centroid_x2,ix],[centroid_y2,iy],color='green')\n","\n","  plt.show()\n","\n","def update_distances(centroid_x1,centroid_y1,centroid_x2,centroid_y2,x,y):\n","  distance1 = []\n","  distance2 = []\n","  for valx,valy in zip(x,y):\n","    d = calc_dist(centroid_x1,centroid_y1,valx,valy)\n","    distance1.append(d)\n","  for valx,valy in zip(x,y):\n","    d = calc_dist(centroid_x2,centroid_y2,valx,valy)\n","    distance2.append(d)\n","  return [distance1,distance2]\n","\n","\n","def reassign_my_centroid(d1,d2):\n","  centroid_type = []\n","  for d1,d2 in zip(d1,d2):\n","    if d1>d2:\n","      centroid_type.append(2)\n","    else:\n","      centroid_type.append(1)\n","  return centroid_type\n","\n","def calc_newcentroid():\n","  mean1data = []\n","  mean2data = []\n","  for i in range(len(df)):\n","    if df['My Centroid'].iloc[i] == 1:\n","      mean1data.append((df['X Coordinates'].iloc[i],df['Y Coordinates'].iloc[i]))\n","    else:\n","      mean2data.append((df['X Coordinates'].iloc[i],df['Y Coordinates'].iloc[i]))\n","\n","  mean1x = 0\n","  mean1y = 0\n","  for val in mean1data:\n","    mean1x += val[0]/len(mean1data)\n","    mean1y += val[1]/len(mean1data)\n","\n","  mean2x = 0\n","  mean2y = 0\n","  for val in mean2data:\n","    mean2x += val[0]/len(mean2data)\n","    mean2y += val[1]/len(mean2data)\n","  new_centroids = [(mean1x,mean1y),(mean2x,mean2y)]\n","  return new_centroids\n"],"metadata":{"id":"Vz9ueM0M3Txf","executionInfo":{"status":"ok","timestamp":1717145847256,"user_tz":-330,"elapsed":677,"user":{"displayName":"Siddhant Chaudhary","userId":"18152044454875442692"}}},"execution_count":111,"outputs":[]},{"cell_type":"markdown","source":["# Run this"],"metadata":{"id":"vpirWefr3UjC"}},{"cell_type":"code","execution_count":112,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1XiFvQF4nNml0ylJSgw9M6OHimiJTG2-v"},"id":"tM_yS5Tbawui","executionInfo":{"status":"ok","timestamp":1717145887104,"user_tz":-330,"elapsed":30100,"user":{"displayName":"Siddhant Chaudhary","userId":"18152044454875442692"}},"outputId":"06e50d42-ad87-4099-aef4-1fad56d16323"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import random\n","import math\n","import random\n","import pandas as pd\n","x = []\n","y = []\n","diffx = int(input('how seprable should the clusters be(x axis)? 0-100: '))\n","diffy = int(input('how seprable should the clusters be(y axis)? 0-100: '))\n","diff = 5\n","# Generate random data for 30 scatter plots\n","scatter_plots = []\n","for _ in range(20):\n","    x += list(np.random.rand(10) * 50)\n","    y += list(np.random.rand(10) * 50)\n","\n","\n","for _ in range(20):\n","  x += list((np.random.rand(10)*50)+diffx)\n","  y += list((np.random.rand(10) * 50)+diffy)\n","\n","centroid_x1 = random.randint(0, (diff+50))\n","centroid_y1 = random.randint(0,50)\n","centroid_x2 = random.randint(0, (diff+50))\n","centroid_y2 = random.randint(0,50)\n","\n","\n","# Plot the scatter plots\n","plt.figure(figsize=(12, 8))\n","plt.scatter(x,y)\n","plt.scatter(centroid_x1,centroid_y1)\n","plt.scatter(centroid_x2,centroid_y2)\n","\n","plt.title('30 Random Scatter Plots')\n","plt.xlabel('X axis')\n","plt.ylabel('Y axis')\n","plt.show()\n","\n","df = pd.DataFrame()\n","df['X Coordinates'] = x\n","df['Y Coordinates'] = y\n","\n","for i in range(10):\n","  distance1 = update_distances(centroid_x1,centroid_y1,centroid_x2,centroid_y2,x,y)[0]\n","  distance2 = update_distances(centroid_x1,centroid_y1,centroid_x2,centroid_y2,x,y)[1]\n","  df[\"D to centroid 1\"] = distance1\n","  df['D to centroid 2'] = distance2\n","  df['My Centroid'] = reassign_my_centroid(distance1,distance2)\n","  centroid_x1 = calc_newcentroid()[0][0]\n","  centroid_y1 = calc_newcentroid()[0][1]\n","  centroid_x2 = calc_newcentroid()[1][0]\n","  centroid_y2 = calc_newcentroid()[1][1]\n","  draw_connections(centroid_x1,centroid_y1,centroid_x2,centroid_y2,x,y)"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO01bJm4SLWxxuoxM8MjdpS"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}